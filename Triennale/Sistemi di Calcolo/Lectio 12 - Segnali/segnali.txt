I segnali sono un meccanismo offerto dal Kernel per notificare eventi al processo, dove per evento si intende un qualcosa di interessante
per il processo. Possono essere di due tipi:

	- Interruzioni (errori, interrupt, ...) definite dal Kernel;
	- Notifiche definite dall'utente.

Ogni tipo di segnale è identificato da un numero (che non coincide con il numero delle interruzioni nell'interrupt vector!).
Ogni segnale ha un handler di default. Ci sono delle costanti predefinite in signal.h, tra cui

	- SIGSEGV (Segmentation Fault): Fault di memoria non recuperabile. Questo segnale NON può essere gestito, ignorato o bloccato.
		Si può verificare se
		
			- Non si hanno i privilegi per accedere alla memoria;
			- Si cerca di accedere a una zona non mappata sulla memoria fisica.
		
		Handler di SIGSEGV:
			- Stampa "Segmentation Fault";
			- Termina il processo.

	- SIGKILL: Termina il processo immadiatamente. Questo segnale NON può essere gestito, ignorato o bloccato.
		Generato dal comando "kill -9" su shell. Pericoloso, se un processo in esecuzione stava eseguendo azioni può essere interrotto bruscamente
		lasciando dietro di sé una situazione inconsistente;

	- SIGTERM: Ordine di interruzione per un processo. Questo segnale può essere gestito, ignorato o bloccato. Un programma che
		raccoglie questo segnale può "ripulire" l'eventuale situazione inconsistente prima che il processo termini. Se nessuno raccoglie
		il segnale, il processo termina. Viene per questo chiamato "Graceful termination". Generato dal comando "kill" senza il "-9".
		"Guarda che devi morire, ma ti dò la possibilità di sistemare le tue cose prima di farlo";

	- SIGINT: Ordine di interruzione per un processo. Come SIGTERM ma può essere inviato da utente con Ctrl+C sulla Shell.

Per alcuni segnali è possibile sostituire l'handler di default con uno personalizzato, che è il motivo per cui è possibile ignorarli o gestirli.

Come si invia un segnale ad un processo? Con il comando kill, ma ci sono due versioni.

	- Core-util: la versione programma eseguibile, invocabile dalla shell.
	- syscall: invocabile da programma C.

Come raccolgo l'errore? Il modo più semplice è la funzione signal (ma è deprecata).

L 24 (mi sa che ha continuato a spiegare queste cose nell'esercitazione...)